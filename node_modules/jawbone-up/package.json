{
  "name": "jawbone-up",
  "version": "0.1.2",
  "dependencies": {
    "request": "2.27.0"
  },
  "repository": {
    "url": "https://github.com/ryanseys/node-jawbone-up"
  },
  "main": "index.js",
  "devDependencies": {
    "jsdoc": "git+https://github.com/jsdoc3/jsdoc.git",
    "mocha": "^2.0.1",
    "nock": "^0.51.0"
  },
  "optionalDependencies": {},
  "engines": {
    "node": "0.10.22",
    "npm": "1.3.11"
  },
  "scripts": {
    "test": "mocha -R min"
  },
  "readme": "# node-jawbone-up\n\nJawbone UP API Node.js Client\n\nAPI Version: v.1.1\n\nOfficial UP API: [jawbone.com/up/developer](https://jawbone.com/up/developer/)\n\n[![Build Status](https://travis-ci.org/ryanseys/node-jawbone-up.svg?branch=master)](http://travis-ci.org/ryanseys/node-jawbone-up)\n\n[![NPM](https://nodei.co/npm/jawbone-up.svg?downloads=true)](https://npmjs.org/package/jawbone-up)\n\n## Installation\n\n``` sh\nnpm install jawbone-up --save\n```\n\n## Usage\n\nAn `access_token` attribute is required in the options object!\nSee below for an example of how this could be done. This library does not\nassist in getting an `access_token` through OAuth, but once you get the token,\nit will apparently last for a **year**.\n\nA `client_secret` attribute is required if you would like to use `up.refreshToken.get()` to get new refresh tokens. It is not required otherwise.\n\n```javascript\nvar options = {\n  // ** REQUIRED **\n  access_token:  'xyz'  // Access token for specific user,\n  client_secret: 'abc'  // Client Secret (required for up.refreshToken.get())\n}\n\nvar up = require('jawbone-up')(options);\n```\n\n## Documentation\n\nOfficial UP API can be found at [jawbone.com/up/developer](https://jawbone.com/up/developer/)\n\nExample callback:\n\n```javascript\n// Callback function returns an error if applicable\n// and/or the body of the API response\nfunction callback(err, body) {\n  if(err) {\n    console.log('Error: ' + err);\n  }\n  else {\n    var data = JSON.parse(body).data;\n    // do something with data\n  }\n}\n```\n\n### User information\n\n```javascript\n// get user info\nup.me.get({}, callback)             // GET /nudge/api/v.1.1/users/@me/\n\n// get friends of user\nup.friends.get({}, callback)        // GET /nudge/api/v.1.1/users/@me/friends\n\n// get mood of user\nup.mood.get({}, callback)           // GET /nudge/api/v.1.1/users/@me/mood\n\n// get trends of user\nup.trends.get({}, callback)         // GET /nudge/api/v.1.1/users/@me/trends\n\n// get goals of user\nup.goals.get({}, callback)          // GET /nudge/api/v.1.1/users/@me/goals\n```\n\n### Moves\n\n```javascript\n// get all moves (paginated results)\nup.moves.get({}, callback)                      // GET /nudge/api/v.1.1/users/@me/moves\n\n// get a specific moves\nup.moves.get({ xid : move_xid }, callback)      // GET /nudge/api/v.1.1/moves/{move_xid}\n\n// get a specific move image\nup.moves.image({ xid : move_xid }, callback)    // GET /nudge/api/v.1.1/moves/{move_xid}/image\n\n// get a specific move intensity\nup.moves.ticks({ xid : move_xid }, callback) // GET /nudge/api/v.1.1/moves/{move_xid}/ticks\n```\n\n### Workouts\n\n```javascript\n// get all workouts (paginated results)\nup.workouts.get({}, callback)                         // GET /nudge/api/v.1.1/users/@me/workouts\n\n// create a new workout\nup.workouts.create(options, callback)                 // POST /nudge/api/v.1.1/users/@me/workouts\n\n// get a specific workout\nup.workouts.get({ xid : workout_xid }, callback)      // GET /nudge/api/v.1.1/workouts/{workout_xid}\n\n// update a specific workout\nup.workouts.update(options, callback)                 // POST https://jawbone.com/nudge/api/v.1.1/workouts/{xid}/partialUpdate\n\n// get a specific workout image\nup.workouts.image({ xid : workout_xid }, callback)    // GET /nudge/api/v.1.1/workouts/{workout_xid}/image\n\n// get a specific workout intensity\nup.workouts.ticks({ xid : workout_xid }, callback) // GET /nudge/api/v.1.1/workouts/{workout_xid}/ticks\n```\n\n### Sleeps\n\n```javascript\n// get all sleeps (paginated results)\nup.sleeps.get({}, callback)                           // GET /nudge/api/v.1.1/users/@me/sleeps\n\n// get a specific sleep\nup.sleeps.get({ xid : sleep_xid }, callback)          // GET /nudge/api/v.1.1/sleeps/{sleep_xid}\n\n// create a new sleep\nup.sleeps.create(options, callback)                   // POST /nudge/api/v.1.1/users/@me/sleeps\n\n// get a specific sleep image\nup.sleeps.image({ xid : sleep_xid }, callback)        // GET /nudge/api/v.1.1/sleeps/{sleep_xid}/image\n\n// get a specific sleep ticks\nup.sleeps.ticks({ xid : sleep_xid }, callback)     // GET /nudge/api/v.1.1/sleeps/{sleep_xid}/ticks\n\n// delete a specific sleep\nup.sleeps.delete({ xid : sleep_xid }, callback)       // DELETE /nudge/api/v.1.1/sleeps/{sleep_xid}\n```\n\n### Meals\n\n```javascript\n// get all meals (paginated results)\nup.meals.get({}, callback)                   // GET /nudge/api/v.1.1/users/@me/meals\n\n// create a new meal\nup.meals.create(options, callback)           // POST /nudge/api/v.1.1/users/@me/meals\n\n// update a specific meal\nup.meals.update(options, callback)           // POST https://jawbone.com/nudge/api/v.1.1/meals/{xid}/partialUpdate\n\n// get a specific meal\nup.meals.get({ xid : meal_xid }, callback)   // GET /nudge/api/v.1.1/meals/{meal_xid}\n```\n\n### Body Composition\n\n```javascript\n// get all body events (paginated results)\nup.events.body.get({}, callback)                      // GET /nudge/api/v.1.1/users/@me/body_events\n\n// get a specific body event\nup.events.body.get({ xid : event_xid }, callback)     // GET /nudge/api/v.1.1/body_events/{event_xid}\n\n// create a new body event\nup.events.body.create(options, callback)              // POST /nudge/api/v.1.1/users/@me/body_events\n\n// delete a specific body event\nup.events.body.delete({ xid : event_xid }, callback)  // DELETE /nudge/api/v.1.1/body_events/{event_xid}\n```\n\n### Cardiac Metrics\n\n```javascript\n// get all cardiac events (paginated results)\nup.events.cardiac.get({}, callback)                      // GET /nudge/api/v.1.1/users/@me/cardiac_events\n\n// get a specific cardiac event\nup.events.cardiac.get({ xid : event_xid }, callback)     // GET /nudge/api/v.1.1/cardiac_events/{event_xid}\n\n// create a new cardiac event\nup.events.cardiac.create(options, callback)              // POST /nudge/api/v.1.1/users/@me/cardiac_events\n\n// delete a specific cardiac event\nup.events.cardiac.delete({ xid : event_xid }, callback)  // DELETE /nudge/api/v.1.1/cardiac_events/{event_xid}\n```\n\n### Generic Events\n\n```javascript\n// get all generic events (paginated results)\nup.events.generic.get({}, callback)                      // GET /nudge/api/v.1.1/users/@me/generic_events\n\n// get a specific generic event\nup.events.generic.get({ xid : event_xid }, callback)     // GET /nudge/api/v.1.1/generic_events/{event_xid}\n\n// create a new generic event\nup.events.generic.create(options, callback)              // POST /nudge/api/v.1.1/users/@me/generic_events\n\n// update an existing generic event\nup.events.generic.update(options, callback)              // POST /nudge/api/v.1.1/users/@me/generic_events/{xid}/partialUpdate\n\n// delete a specific generic event\nup.events.generic.delete({ xid : event_xid }, callback)  // DELETE /nudge/api/v.1.1/generic_events/{event_xid}\n```\n\n### Mood\n\n```javascript\n// get all moods (paginated results)\nup.mood.get({}, callback)                     // GET /nudge/api/v.1.1/users/@me/mood\n\n// get a specific mood\nup.mood.get({ xid : mood_xid }, callback)     // GET /nudge/api/v.1.1/mood/{mood_xid}\n\n// create a new mood\nup.mood.create(options, callback)             // POST /nudge/api/v.1.1/users/@me/mood\n\n// delete a specific mood\nup.mood.delete({ xid : mood_xid }, callback)  // DELETE /nudge/api/v.1.1/mood/{mood_xid}\n```\n\n### Time Zone\n\n```javascript\n// get a user's timezone\nup.timezone.get({}, callback) // GET /nudge/api/v.1.1/users/@me/timezone\n```\n\n## Refresh Token\n\nAdded in v.1.1\n\n```javascript\n// get (technically POST) a refresh token (requires client_secret passed into options when initializing)\nup.refreshToken.get(callback) // POST /nudge/api/v.1.1/users/@me/refreshToken\n```\n\n### Settings\n\nAdded in v.1.1\n\n```javascript\n// get user settings\nup.settings.get(callback) // GET /nudge/api/v.1.1/users/@me/settings\n```\n\n### Webhook\n\nAdded in v.1.1\n\n```javascript\n// create a webhook\nup.webhook.create(webhook_url, callback) // POST /users/@me/pubsub?webhook={webhook_url};\n\n// delete a webhook\nup.webhook.delete(callback) // DELETE /users/@me/pubsub\n```\n\n## Tests\n\nTests can be found in the `test` folder.\n\nTo run tests:\n\nMake sure you first have dependencies installed by running:\n\n```bash\nnpm install\n```\n\nThen you may run all the tests with:\n\n```bash\nnpm test\n```\n\n## License\n\n[MIT](https://github.com/ryanseys/node-jawbone-up/blob/master/LICENSE.md) &copy; 2014 Ryan Seys\n",
  "readmeFilename": "README.md",
  "description": "Jawbone UP API Node.js Client",
  "bugs": {
    "url": "https://github.com/ryanseys/node-jawbone-up/issues"
  },
  "_id": "jawbone-up@0.1.2",
  "dist": {
    "shasum": "9f1639a2f195a05ce574c6fdbac1f8deae8f6013"
  },
  "_from": "jawbone-up@",
  "_resolved": "https://registry.npmjs.org/jawbone-up/-/jawbone-up-0.1.2.tgz"
}
